---@diagnostic disable: undefined-global
---@diagnostic disable-next-line: undefined-global
vim.g.mapleader = ' '
vim.opt.number = true
vim.cmd("set shiftwidth=4")
local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not (vim.uv or vim.loop).fs_stat(lazypath) then
    vim.fn.system({
	"git",
	"clone",
	"--filter=blob:none",
	"https://github.com/folke/lazy.nvim.git",
	"--branch=stable", -- latest stable release
	lazypath,
    })
end
vim.opt.rtp:prepend(lazypath)

require("lazy").setup('plugins')

local builtin = require("telescope.builtin")
vim.keymap.set('n', '<leader>/', builtin.find_files, {})
vim.keymap.set('n', '<leader>f', builtin.live_grep, {})

local configs = require("nvim-treesitter.configs")
configs.setup({
    ensure_installed = {"lua", "javascript", "python"},
    highlight = { enable = true },
    indent = { enable = true }
})

local lspconfig = require("lspconfig")
lspconfig.lua_ls.setup({})
vim.keymap.set('n', '<leader>ca', vim.lsp.buf.code_action, {})
vim.keymap.set('n', 'K', vim.lsp.buf.hover, {})

require("telescope").setup {
  extensions = {
    ["ui-select"] = {
      require("telescope.themes").get_dropdown {
	-- even more opts
      }
    }
  }
}
-- To get ui-select loaded and working with telescope, you need to call
-- load_extension, somewhere after setup function:
require("telescope").load_extension("ui-select")

vim.bufhidden = {"hide"}

local function checkmess()
    local config = vim.diagnostic.config()
    local is_virtual_text_enabled = config.virtual_text
--    print(is_virtual_text_enabled)
    if is_virtual_text_enabled then
	vim.diagnostic.config({virtual_text=false})
    else
	vim.diagnostic.config({virtual_text=true})
    end
end

vim.opt.completeopt = ("menuone,longest")
vim.keymap.set("n", "<leader>r", ":wa <CR> | :TermExec cmd='python %:p' <CR>")
vim.diagnostic.config({virtual_text=true})
--vim.keymap.set("n", "<Leader>r", ":TermExec cmd='python %' dir='%:p:h' <CR>")
vim.keymap.set("n", "<leader>d", ":lua vim.lsp.buf.format() <CR>")
vim.keymap.set("n", "<leader>d", ":lua vim.lsp.buf.format() <CR>")
vim.keymap.set("n", "<leader>m", checkmess)

